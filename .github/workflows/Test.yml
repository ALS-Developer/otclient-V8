name: Build and Test
on: [push, pull_request]

jobs:
  Windows:
    name: build-windows
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          submodules: recursive

    - name: Setup MSBuild and add to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      id: setup_msbuild

    - uses: actions/cache@v2
      with:
        path: C:/vcpkg
        key: ${{ runner.os }}-vcpkg

    - name: Install dependencies 
      timeout-minutes: 25
      run: |
        C:\vcpkg\vcpkg install boost-iostreams:x86-windows-static boost-asio:x86-windows-static `
        boost-beast:x86-windows-static boost-system:x86-windows-static boost-variant:x86-windows-static `
        boost-lockfree:x86-windows-static boost-process:x86-windows-static boost-program-options:x86-windows-static `
        luajit:x86-windows-static glew:x86-windows-static boost-filesystem:x86-windows-static boost-uuid:x86-windows-static `
        physfs:x86-windows-static openal-soft:x86-windows-static libogg:x86-windows-static libvorbis:x86-windows-static `
        zlib:x86-windows-static libzip:x86-windows-static openssl:x86-windows-static
        C:\vcpkg\vcpkg integrate install

    - name: Compile otclient_dx
      timeout-minutes: 20
      run: |
        cd vc16
        MSBuild /property:Configuration=DirectX

    - name: Run tests
      timeout-minutes: 10
      run: |        
        7z x tests.7z -aoa
        $process = (Start-Process -Wait -PassThru otclient_dx.exe --test)        
        Get-Content otclientv8.log
        if ($process.ExitCode -ne 0) { throw "Invalid exit code: " + $process.ExitCode; }
        Remove-Item 'data\things' -Recurse

    - name: Upload otclientv8.log
      uses: 'actions/upload-artifact@v2'
      with:
        path: otclientv8.log
        name: Download-otclientv8.log
        
    - name: Compile otclient_gl, otclient_debug_lib, otclient_debug
      timeout-minutes: 40
      run: |
        cd vc16
        MSBuild /property:Configuration=OpenGL
        MSBuild /property:Configuration=Debug_lib
        MSBuild /property:Configuration=Debug

    - name: Decompress android libs
      run: |
        dir C:\android
        7z x android_libs.7z -aoa -oC:\android

    - name: Create data.zip for android
      run: |
        powershell -ExecutionPolicy Bypass -File .\create_android_assets.ps1

    - name: Build for android
      timeout-minutes: 20
      run: |
        cd android
        $env:VS_NdkRoot="C:\Android\android-sdk\ndk\21.4.7075529"
        MSBuild.exe /p:Configuration=Release /p:Platform="ARM"
        
    - name: Upload otclient
      uses: 'actions/upload-artifact@v2'
      with:
        name: Download-otclientv8
        path: |
          otclient_gl.exe
          otclient_dx.exe
          otclientv8.apk
          *.dll
          data
          modules
          layouts
          init.lua
        
    - name: Copy screenshots
      run: |        
        $location = Get-Location
        cd $env:appdata\otclientv8\otclientv8
        pip3 install pillow
        python3 -c "from PIL import Image; import glob; [Image.open(file).convert('RGB').save(file[:-3] + 'jpg', quality=50) for file in glob.glob('*.png')]"
        cd $location
        mkdir screenshots
        Get-ChildItem $env:appdata\otclientv8\otclientv8 -Filter *.jpg | Copy-Item -Destination screenshots -Force -PassThru

    - name: Upload screenshot
      uses: 'actions/upload-artifact@v2'
      with:
        path: screenshots
        name: Download-screenshots

    - name: Download public otclientv8
      uses: actions/checkout@v2
      with:
          repository: bbarwik/otclient-actions-test2
          path: otclientv8
          submodules: recursive
          token: ${{ secrets.token }}

    - name: Update public otclientv8 files
      run: |        
        cd otclientv8
        git rm . -f -r
        git checkout HEAD -- README.md
        cd ..
        Copy-Item -Path "init.lua*" -Destination "release"
        Copy-Item -Path "test.lua*" -Destination "release"
        Copy-Item -Path "otclient_dx.exe" -Destination "release"
        Copy-Item -Path "otclient_gl.exe" -Destination "release"
        Copy-Item -Path "otclientv8.apk" -Destination "release"
        Copy-Item -Path "libGLESv2.dll" -Destination "release"
        Copy-Item -Path "libEGL.dll" -Destination "release"
        Copy-Item -Path "d3dcompiler_47.dll" -Destination "release"
        Copy-Item -Path "data" -Destination "release" -Recurse
        Copy-Item -Path "layouts" -Destination "release" -Recurse
        Copy-Item -Path "modules" -Destination "release" -Recurse

    - name: Commit public otclientv8
      uses: EndBug/add-and-commit@v7
      with:
        cwd: otclientv8
        push: true

    - name: Download otcv8-dev
      uses: actions/checkout@v2
      with:
          repository: bbarwik/otcv8-dev
          path: otcv8-dev
          submodules: recursive
          token: ${{ secrets.token }}

    - name: Update otcv8-dev files
      run: |        
        cd otcv8-dev
        git rm src/framework -f -r
        cd ..
        robocopy src/framework release/framework *.h /s
        7z a -t7z release/lib.7z otclient_debug_lib.lib otclient_debug_lib.pdb

    - name: Commit otcv8-dev
      uses: EndBug/add-and-commit@v7
      with:
        cwd: otcv8-dev
        push: true
